from py2neo import Graph
import logging

# Set up logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# Connect to Neo4j
graph = Graph("bolt://localhost:7688", auth=("neo4j", ""))

def delete_metasploit_data():
    try:
        # Delete relationships between MetasploitScript and other nodes
        graph.run("MATCH (ms:MetasploitScript)-[r]->() DELETE r")
        graph.run("MATCH ()-[r]->(ms:MetasploitScript) DELETE r")

        # Delete MetasploitScript nodes
        graph.run("MATCH (ms:MetasploitScript) DELETE ms")
        graph.run("MATCH (md:MetasploitDescription) DELETE md")

        # Delete orphan nodes
        orphan_nodes = [
            "Author", "License", "References", "Privileged", "Platform",
            "Arch", "Payload", "Code", "DefaultOptions", "Targets",
            "DisclosureDate", "Reference", "CVE", "BID", "ZDI"
        ]
        for node in orphan_nodes:
            graph.run(f"MATCH (n:{node}) WHERE NOT (n)-[]-() DELETE n")

        logging.info("All nodes and relationships created by the script have been deleted from the Neo4j database.")

    except Exception as e:
        logging.error(f"Unexpected error during data deletion: {e}")

# Execute the function to delete the data
delete_metasploit_data()
