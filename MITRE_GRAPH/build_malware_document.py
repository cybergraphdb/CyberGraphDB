import logging
from tqdm import tqdm
import manager_html_reference
import manager_pdf_references

# Configure logging
logging.basicConfig(
    filename="Error_Document-DB.log",
    level=logging.ERROR,
    format="%(asctime)s - %(levelname)s: %(message)s",
)

def build_document(malware_name, malware_page_references):
    print("\n\n[!!!] Building Malware Document ... \n")
    for ref in tqdm(malware_page_references, leave=False):
        try:
            if ref.endswith(".pdf"):
                extracted_text = manager_pdf_references.extract_text_from_pdf(ref)
                extracted_text = extracted_text.decode("utf-8")
            else:
                extracted_text = manager_html_reference.extract_text_from_html(ref)
            
            complete_path = f"MALWARE_DOCUMENTS/{malware_name}_document.txt"
            with open(complete_path, "a", encoding="utf-8") as f:
                f.write(f"\n\n --------------- Content of Ref: {ref} -----------------------\n")
                f.write(str(extracted_text))
        except Exception as e:
            # Log the error
            error_string = f"The url {ref} has presented this error:\n{str(e)}"
            logging.error(error_string, exc_info=True)
            pass

# Example usage
if __name__ == "__main__":
    malware_name = "example_malware"
    malware_page_references = [
        "http://example.com/page1",
        "http://example.com/page2.pdf",
        # Add more references as needed
    ]
    build_document(malware_name, malware_page_references)
